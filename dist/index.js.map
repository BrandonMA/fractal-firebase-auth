{"version":3,"file":"index.js","sources":["../src/recoil/authenticationAtom.ts","../src/recoil/usersAtom.ts","../src/recoil/currentUserSelector.ts","../src/firebase/authentication/subscribeForAuthenticatedUser.ts","../src/firebase/users/subscribeForUser.ts","../src/Authenticate.tsx","../src/FirebaseInit.tsx","../src/firebase/authentication/signIn.ts","../src/firebase/authentication/signOut.ts","../src/firebase/authentication/signUp.ts","../src/firebase/users/createUser.ts","../src/firebase/types/AuthenticationState.ts","../src/firebase/types/MinimalExpectedReduxState.ts","../src/firebase/types/MinimalUser.ts","../src/firebase/types/UsersState.ts","../src/firebase/types/MinimalExpectedDatabase.ts"],"sourcesContent":["import { atom } from 'recoil';\nimport { AuthenticationState } from '../firebase/types';\n\nexport const authenticationAtom = atom<AuthenticationState>({\n    key: 'authenticationAtom',\n    default: {\n        firebaseUser: undefined,\n        loading: true\n    }\n});\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { atom } from 'recoil';\nimport { MinimalUserData } from '../firebase/types/MinimalUser';\nimport { Document } from 'firebase-db-manager';\n\nexport const usersAtom = atom({\n    key: 'usersAtom',\n    default: new Map<string, Document<MinimalUserData, any>>()\n});\n","import { selector } from 'recoil';\nimport { usersAtom } from './usersAtom';\nimport { authenticationAtom } from './authenticationAtom';\n\nexport const currentUserSelector = selector({\n    key: 'currentUserSelector',\n    get: ({ get }) => {\n        const auth = get(authenticationAtom);\n        const users = get(usersAtom);\n        if (auth.firebaseUser != null) {\n            return users.get(auth.firebaseUser.uid);\n        }\n        return undefined;\n    }\n});\n","import * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { AuthenticationState } from '../..';\n\nexport function subscribeForAuthenticatedUser(onFetch: (state: AuthenticationState) => void): firebase.Unsubscribe {\n    return firebase.auth().onAuthStateChanged(\n        (user) => {\n            onFetch({\n                firebaseUser: user,\n                loading: false\n            });\n        },\n        (error) => {\n            alert(error.message);\n        }\n    );\n}\n","import firebase from 'firebase/app';\nimport { MinimalExpectedDatabase } from '../types/MinimalExpectedDatabase';\nimport { MinimalUserData } from '../types';\nimport { Document } from 'firebase-db-manager';\n\nexport function subscribeForUser<T extends MinimalUserData, S>(\n    database: MinimalExpectedDatabase<T, S>,\n    id: string,\n    onFetchDone?: (newDocument?: Document<T, S>) => void\n): firebase.Unsubscribe {\n    return database.collections.users.subscribeToDocument(\n        id,\n        (newDocument) => {\n            if (onFetchDone) {\n                onFetchDone(newDocument);\n            }\n        },\n        (error) => {\n            alert(error.message);\n        },\n        () => {\n            if (onFetchDone) {\n                onFetchDone();\n            }\n        }\n    );\n}\n","import { useEffect, useState } from 'react';\nimport { useRecoilValue, useRecoilState, useSetRecoilState } from 'recoil';\nimport { authenticationAtom, currentUserSelector, usersAtom } from './recoil';\nimport { subscribeForAuthenticatedUser } from './firebase/authentication/subscribeForAuthenticatedUser';\nimport { subscribeForUser } from './firebase/users/subscribeForUser';\nimport { MinimalExpectedDatabase, MinimalUserData } from './firebase/types';\n\ninterface Props {\n    database: MinimalExpectedDatabase<MinimalUserData, null>;\n    loadingComponent: JSX.Element;\n    authenticationComponent: JSX.Element;\n    userNotAvailableComponent: JSX.Element;\n    children: JSX.Element;\n    errorComponet: JSX.Element;\n}\n\nexport function Authenticate(props: Props): JSX.Element {\n    const [authenticationState, setAuthenticationState] = useRecoilState(authenticationAtom);\n    const setUsers = useSetRecoilState(usersAtom);\n    const currentUser = useRecoilValue(currentUserSelector);\n    const [listeningForUser, setListeningForUser] = useState(false);\n    const { database, loadingComponent, authenticationComponent, userNotAvailableComponent, children, errorComponet } = props;\n\n    useEffect(() => {\n        const unsubscribe = subscribeForAuthenticatedUser((authState) => {\n            setAuthenticationState(authState);\n        });\n        return (): void => {\n            unsubscribe();\n        };\n    }, [setAuthenticationState]);\n\n    useEffect(() => {\n        let unsubscribe: firebase.Unsubscribe | undefined;\n        if (authenticationState.firebaseUser != null) {\n            unsubscribe = subscribeForUser(database, authenticationState.firebaseUser.uid, (document) => {\n                if (document != null) {\n                    setUsers((oldUsers) => oldUsers.set(document.id(), document));\n                }\n                setListeningForUser(true);\n            });\n        }\n        return (): void => {\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        };\n    }, [authenticationState, database, setUsers]);\n\n    if (authenticationState.firebaseUser === undefined && authenticationState.loading) {\n        return loadingComponent;\n    } else if (authenticationState.firebaseUser === null && authenticationState.loading === false) {\n        return authenticationComponent;\n    } else {\n        if (listeningForUser) {\n            if (currentUser == null) {\n                return userNotAvailableComponent;\n            } else {\n                return children;\n            }\n        }\n        return errorComponet;\n    }\n}\n","import * as firebase from 'firebase/app';\nimport { useState, useEffect } from 'react';\n\ninterface Config {\n    [key: string]: string;\n}\n\ninterface Props {\n    children: JSX.Element;\n    firebaseConfig: Config;\n    loadingComponent: JSX.Element;\n}\n\nexport function FirebaseInit(props: Props): JSX.Element {\n    const [firebaseReady, setFirebaseReady] = useState(false);\n    const { firebaseConfig } = props;\n\n    useEffect(() => {\n        firebase.initializeApp(firebaseConfig);\n        setFirebaseReady(true);\n    }, [firebaseConfig]);\n\n    return firebaseReady ? props.children : props.loadingComponent;\n}\n","import * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { AuthenticationState } from '../types/AuthenticationState';\n\nexport async function signIn(email: string, password: string): Promise<AuthenticationState> {\n    const userCredential = await firebase.auth().signInWithEmailAndPassword(email, password);\n    return {\n        firebaseUser: userCredential.user,\n        loading: false\n    };\n}\n","import * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { AuthenticationState } from '../types/AuthenticationState';\n\nexport async function signOut(): Promise<AuthenticationState> {\n    await firebase.auth().signOut();\n    return {\n        firebaseUser: undefined,\n        loading: false\n    };\n}\n","import * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { EmailPasswordPair } from '../types/EmailPasswordPair';\nimport { AuthenticationState } from '../types/AuthenticationState';\n\nexport async function signUp(user: EmailPasswordPair): Promise<AuthenticationState> {\n    const userCredential = await firebase.auth().createUserWithEmailAndPassword(user.email, user.password);\n    return {\n        firebaseUser: userCredential.user,\n        loading: false\n    };\n}\n","import { MinimalExpectedDatabase } from '../types/MinimalExpectedDatabase';\nimport { MinimalUserData } from '../types';\nimport { Document } from 'firebase-db-manager';\n\nexport async function createUser<T extends MinimalUserData, S>(database: MinimalExpectedDatabase<T, S>, data: T): Promise<Document<T, S>> {\n    const userDocument = await database.collections.users.createDocument(data);\n    return userDocument;\n}\n","import * as firebase from 'firebase/app';\n\nexport interface AuthenticationState {\n    firebaseUser: firebase.User | undefined | null;\n    loading: boolean;\n}\n\nexport function isAuthenticationState(value: unknown): value is AuthenticationState {\n    const castedValue = value as AuthenticationState;\n    return castedValue.loading != null;\n}\n","import { AuthenticationState, isAuthenticationState } from './AuthenticationState';\nimport { UsersState } from './UsersState';\nimport { MinimalUserData } from './MinimalUser';\n\nexport type MinimalExpectedReduxState = {\n    authentication: AuthenticationState;\n    users: UsersState<MinimalUserData, unknown>;\n};\n\nexport function isMinimalExpectedReduxState(value: unknown): value is MinimalExpectedReduxState {\n    const castedValue = value as MinimalExpectedReduxState;\n    return castedValue.authentication != null && isAuthenticationState(castedValue.authentication) && castedValue.users != null;\n}\n","import { Document, IDEnabled } from 'firebase-db-manager';\n\nexport interface MinimalUserData extends IDEnabled {\n    email: string;\n}\nexport function isMinimalUserData(value: unknown): value is MinimalUserData {\n    const castedValue = value as MinimalUserData;\n    return castedValue.email != null;\n}\n\nexport type MinimalUser<T extends MinimalUserData, S> = Document<T, S>;\n","import { MinimalUser, MinimalUserData } from './MinimalUser';\n\nexport interface UsersState<T extends MinimalUserData, S> {\n    values: Map<string, MinimalUser<T, S>>;\n}\n\nexport function isUsersState<T extends MinimalUserData, S>(value: unknown): value is UsersState<T, S> {\n    const casted = value as UsersState<T, S>;\n    return casted.values != null;\n}\n","import { Database, Collection } from 'firebase-db-manager';\nimport { MinimalUserData } from './MinimalUser';\n\ntype UsersCollection<T extends MinimalUserData, S> = Collection<T, S>;\nexport type MinimalExpectedDatabase<T extends MinimalUserData, S> = Database<{ users: UsersCollection<T, S> }>;\n\nexport function isMinimalExpectedDatabase<T extends MinimalUserData, S>(value: unknown): value is MinimalExpectedDatabase<T, S> {\n    const casted = value as MinimalExpectedDatabase<T, S>;\n    return casted.collections.users != null;\n}\n"],"names":["authenticationAtom","atom","key","firebaseUser","undefined","loading","usersAtom","Map","currentUserSelector","selector","get","auth","users","uid","subscribeForAuthenticatedUser","onFetch","firebase","onAuthStateChanged","user","error","alert","message","subscribeForUser","database","id","onFetchDone","collections","subscribeToDocument","newDocument","Authenticate","props","useRecoilState","authenticationState","setAuthenticationState","setUsers","useSetRecoilState","currentUser","useRecoilValue","useState","listeningForUser","setListeningForUser","loadingComponent","authenticationComponent","userNotAvailableComponent","children","errorComponet","useEffect","unsubscribe","authState","document","oldUsers","set","FirebaseInit","firebaseReady","setFirebaseReady","firebaseConfig","signIn","email","password","signInWithEmailAndPassword","userCredential","signOut","signUp","createUserWithEmailAndPassword","createUser","data","createDocument","isAuthenticationState","value","castedValue","isMinimalExpectedReduxState","authentication","isMinimalUserData","isUsersState","casted","values","isMinimalExpectedDatabase"],"mappings":"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"}