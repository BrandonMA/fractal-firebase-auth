{"version":3,"file":"index.js","sources":["../src/redux/types/AuthenticationState.ts","../src/redux/types/MinimalExpectedReduxState.ts","../src/redux/hooks/useAuthenticationState.tsx","../src/redux/types/UsersState.ts","../src/redux/hooks/useCurrentUser.tsx","../src/redux/thunks/Authentication/subscribeForAuthenticatedUser.ts","../src/redux/thunks/Users/subscribeForUser.ts","../src/Authenticate.tsx","../src/redux/thunks/Authentication/signIn.ts","../src/redux/thunks/Authentication/signOut.ts","../src/redux/thunks/Authentication/signUp.ts","../src/redux/slices/createAuthenticationSlice.ts","../src/Firebase.tsx","../src/redux/slices/createUsersSlice.ts","../src/redux/thunks/Users/createUser.ts"],"sourcesContent":["import * as firebase from 'firebase/app';\n\nexport interface AuthenticationState {\n    firebaseUser: firebase.User | undefined | null;\n    loading: boolean;\n}\n\nexport function isAuthenticationState(value: unknown): value is AuthenticationState {\n    const castedValue = value as AuthenticationState;\n    return castedValue.loading != null;\n}\n","import { AuthenticationState, isAuthenticationState } from './AuthenticationState';\nimport { UsersState } from './UsersState';\nimport { MinimalUserData } from './MinimalUser';\n\nexport type MinimalExpectedReduxState = {\n    authentication: AuthenticationState;\n    users: UsersState<MinimalUserData, unknown>;\n};\n\nexport function isMinimalExpectedReduxState(value: unknown): value is MinimalExpectedReduxState {\n    const castedValue = value as MinimalExpectedReduxState;\n    return castedValue.authentication != null && isAuthenticationState(castedValue.authentication) && castedValue.users != null;\n}\n","import { useSelector } from 'react-redux';\nimport { AuthenticationState } from '../types/AuthenticationState';\nimport { isMinimalExpectedReduxState } from '../types/MinimalExpectedReduxState';\n\nconst getState = (state: unknown): Readonly<AuthenticationState> => {\n    if (isMinimalExpectedReduxState(state)) {\n        return state.authentication;\n    } else {\n        throw Error('State does not have the expected shape');\n    }\n};\n\nexport const useAuthenticationState = (): Readonly<AuthenticationState> => {\n    return useSelector(getState);\n};\n","import { MinimalUser, MinimalUserData } from './MinimalUser';\n\nexport interface UsersState<T extends MinimalUserData, S> {\n    values: Map<string, MinimalUser<T, S>>;\n}\n\nexport function isUsersState<T extends MinimalUserData, S>(value: unknown): value is UsersState<T, S> {\n    const casted = value as UsersState<T, S>;\n    return casted.values != null;\n}\n","import { useSelector } from 'react-redux';\nimport { MinimalUser, MinimalUserData } from '../types/MinimalUser';\nimport { useAuthenticationState } from './useAuthenticationState';\nimport { isMinimalExpectedReduxState, UsersState, isUsersState } from '../types';\n\nfunction getUsers<T extends MinimalUserData, S>(state: unknown): Readonly<UsersState<T, S>> {\n    if (isMinimalExpectedReduxState(state) && isUsersState<T, S>(state.users)) {\n        return state.users;\n    } else {\n        throw Error('State does not have the expected shape');\n    }\n}\n\nexport function useCurrentUser<T extends MinimalUserData, S>(): MinimalUser<T, S> | null | undefined {\n    const authState = useAuthenticationState();\n    const users = useSelector(getUsers);\n    if (authState.firebaseUser != null) {\n        return users.values.get(authState.firebaseUser.uid) as MinimalUser<T, S> | null | undefined;\n    } else {\n        return null;\n    }\n}\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { AuthenticationSlice, MinimalExpectedReduxState } from '../..';\n\nexport const subscribeForAuthenticatedUser = (slice: AuthenticationSlice) => (\n    dispatch: ThunkDispatch<firebase.Unsubscribe, MinimalExpectedReduxState, Action>\n): firebase.Unsubscribe => {\n    return firebase.auth().onAuthStateChanged(\n        (user) => {\n            dispatch(\n                slice.actions.setAuthenticationState({\n                    firebaseUser: user,\n                    loading: false\n                })\n            );\n        },\n        (error) => {\n            alert(error.message);\n        }\n    );\n};\n","import firebase from 'firebase/app';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { MinimalExpectedReduxState } from '../..';\nimport { MinimalExpectedDatabase } from '../../types/MinimalExpectedDatabase';\nimport { MinimalUserData } from '../../types';\nimport { UsersSlice } from '../../slices';\n\nexport function subscribeForUser<T extends MinimalUserData, S>(\n    database: MinimalExpectedDatabase<T, S>,\n    id: string,\n    usersSlice: UsersSlice,\n    onFetchDone?: () => void\n) {\n    return (dispatch: ThunkDispatch<Promise<void>, MinimalExpectedReduxState, Action>): firebase.Unsubscribe => {\n        return database.collections.users.subscribeToDocument(\n            id,\n            (newDocument) => {\n                dispatch(usersSlice.actions.setUser(newDocument));\n                if (onFetchDone) {\n                    onFetchDone();\n                }\n            },\n            (error) => {\n                alert(error.message);\n            },\n            () => {\n                if (onFetchDone) {\n                    onFetchDone();\n                }\n            }\n        );\n    };\n}\n","import { useAuthenticationState } from './redux/hooks/useAuthenticationState';\nimport { useCurrentUser } from './redux/hooks/useCurrentUser';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { MinimalExpectedReduxState, AuthenticationSlice, MinimalUserData, UsersSlice } from './redux';\nimport { Action } from 'redux';\nimport { subscribeForAuthenticatedUser } from './redux/thunks/Authentication/subscribeForAuthenticatedUser';\nimport { connect } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { subscribeForUser } from './redux/thunks/Users/subscribeForUser';\nimport { MinimalExpectedDatabase } from './redux/types/MinimalExpectedDatabase';\n\ninterface ReduxFunctions {\n    subscribeForAuthenticatedUser: () => firebase.Unsubscribe;\n    subscribeForUser: (\n        database: MinimalExpectedDatabase<MinimalUserData, null>,\n        id: string,\n        onFetchDone: () => void\n    ) => firebase.Unsubscribe;\n}\n\ninterface OwnProps {\n    database: MinimalExpectedDatabase<MinimalUserData, null>;\n    authenticationSlice: AuthenticationSlice;\n    usersSlice: UsersSlice;\n    loadingComponent: JSX.Element;\n    authenticationComponent: JSX.Element;\n    userNotAvailableComponent: JSX.Element;\n    children: JSX.Element;\n}\n\ninterface Props extends OwnProps, ReduxFunctions {}\n\nfunction Authenticate(props: Props): JSX.Element {\n    const authenticationState = useAuthenticationState();\n    const currentUser = useCurrentUser();\n    const [listeningForUser, setListeningForUser] = useState(false);\n\n    const { subscribeForAuthenticatedUser, database, subscribeForUser } = props;\n\n    useEffect(() => {\n        const unsubscribe = subscribeForAuthenticatedUser();\n        return (): void => {\n            unsubscribe(); // Remove auth listening when the component is unmounted.\n        };\n    }, [subscribeForAuthenticatedUser]);\n\n    useEffect(() => {\n        let unsubscribe: firebase.Unsubscribe | undefined;\n        if (authenticationState.firebaseUser != null) {\n            unsubscribe = subscribeForUser(database, authenticationState.firebaseUser.uid, () => {\n                setListeningForUser(true);\n            });\n        }\n        return (): void => {\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        };\n    }, [subscribeForUser, authenticationState]);\n\n    if (authenticationState.firebaseUser === undefined && authenticationState.loading) {\n        return props.loadingComponent;\n    } else if (authenticationState.firebaseUser === null && authenticationState.loading === false) {\n        return props.authenticationComponent;\n    } else {\n        if (listeningForUser) {\n            if (currentUser == null) {\n                return props.userNotAvailableComponent;\n            } else {\n                return props.children;\n            }\n        }\n        return props.loadingComponent;\n    }\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<void, MinimalExpectedReduxState, Action>, ownProps: OwnProps): ReduxFunctions => ({\n    subscribeForAuthenticatedUser(): firebase.Unsubscribe {\n        return dispatch(subscribeForAuthenticatedUser(ownProps.authenticationSlice));\n    },\n    subscribeForUser(database: MinimalExpectedDatabase<MinimalUserData, null>, id: string, onFetchDone: () => void): firebase.Unsubscribe {\n        return dispatch(subscribeForUser(database, id, ownProps.usersSlice, onFetchDone));\n    }\n});\n\nexport default connect(null, mapDispatchToProps)(Authenticate);\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { AuthenticationState } from '../../types/AuthenticationState';\nimport { EmailPasswordPair } from '../../types/EmailPasswordPair';\n\nexport const signIn = createAsyncThunk(\n    'authentication/signIn',\n    async (user: EmailPasswordPair): Promise<AuthenticationState> => {\n        const userCredential = await firebase.auth().signInWithEmailAndPassword(user.email, user.password);\n        return {\n            firebaseUser: userCredential.user,\n            loading: false\n        };\n    }\n);\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { AuthenticationState } from '../../types/AuthenticationState';\n\nexport const signOut = createAsyncThunk(\n    'authentication/signOut',\n    async (): Promise<AuthenticationState> => {\n        await firebase.auth().signOut();\n        return {\n            firebaseUser: undefined,\n            loading: false\n        };\n    }\n);\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { AuthenticationState } from '../../types/AuthenticationState';\nimport { EmailPasswordPair } from '../../types/EmailPasswordPair';\n\nexport const signUp = createAsyncThunk(\n    'authentication/signUp',\n    async (user: EmailPasswordPair): Promise<AuthenticationState> => {\n        const userCredential = await firebase.auth().createUserWithEmailAndPassword(user.email, user.password);\n        return {\n            firebaseUser: userCredential.user,\n            loading: false\n        };\n    }\n);\n","import { createSlice, PayloadAction, ActionCreatorWithPreparedPayload } from '@reduxjs/toolkit';\nimport { AuthenticationState } from '../types/AuthenticationState';\nimport { signIn } from '../thunks/Authentication/signIn';\nimport { signOut } from '../thunks/Authentication/signOut';\nimport { signUp } from '../thunks/Authentication/signUp';\nimport * as firebase from 'firebase/app';\n\nconst initialState: Readonly<AuthenticationState> = Object.freeze({\n    firebaseUser: undefined,\n    loading: true\n});\n\ntype ReducerFunction = (state: AuthenticationState, action: PayloadAction<AuthenticationState>) => void;\ninterface ExtraReducers<ThunkArg = void> {\n    [key: string]: {\n        callback: ReducerFunction;\n        fullfilled: ActionCreatorWithPreparedPayload<[AuthenticationState, string, ThunkArg], AuthenticationState, string, never>;\n    };\n}\n\nconst replaceAuthenticationState = (state: AuthenticationState, action: PayloadAction<AuthenticationState>): void => {\n    state.loading = action.payload.loading;\n    state.firebaseUser = action.payload.firebaseUser;\n};\n\n// eslint-disable-next-line\nexport function createAuthenticationSlice<ThunkArg = void>(reducers?: ExtraReducers<ThunkArg>, extraReducers?: ExtraReducers<ThunkArg>) {\n    return createSlice({\n        name: 'authentication',\n        initialState,\n        reducers: {\n            setFirebaseUser: (state, action: PayloadAction<firebase.User | null | undefined>): void => {\n                state.firebaseUser = action.payload;\n            },\n            setLoadingFirebaseData: (state, action: PayloadAction<boolean>): void => {\n                state.loading = action.payload;\n            },\n            setAuthenticationState: replaceAuthenticationState,\n            ...reducers\n        },\n        extraReducers: (builder) => {\n            builder.addCase(signIn.fulfilled, replaceAuthenticationState);\n            builder.addCase(signOut.fulfilled, replaceAuthenticationState);\n            builder.addCase(signUp.fulfilled, replaceAuthenticationState);\n\n            // Inject extra reducers\n            if (extraReducers != null) {\n                const keys = Object.keys(extraReducers);\n                if (keys.length > 0) {\n                    for (const reducerKey of keys) {\n                        const data = extraReducers[reducerKey];\n                        builder.addCase(data.fullfilled, data.callback);\n                    }\n                }\n            }\n        }\n    });\n}\n\nexport type AuthenticationSlice = ReturnType<typeof createAuthenticationSlice>;\n","import * as firebase from 'firebase/app';\nimport { useState, useEffect } from 'react';\nimport { createAuthenticationSlice } from './redux/slices/createAuthenticationSlice';\n\nconst authSlice = createAuthenticationSlice();\nauthSlice.actions.setLoadingFirebaseData(false);\n\ninterface Config {\n    [key: string]: string;\n}\n\ninterface Props {\n    children: JSX.Element;\n    firebaseConfig: Config;\n    loadingComponent: JSX.Element;\n}\n\nexport function Firebase(props: Props): JSX.Element {\n    const [firebaseReady, setFirebaseReady] = useState(false);\n    const { firebaseConfig } = props;\n\n    useEffect(() => {\n        firebase.initializeApp(firebaseConfig);\n        setFirebaseReady(true);\n    }, [firebaseConfig]);\n\n    return firebaseReady ? props.children : props.loadingComponent;\n}\n","import { createSlice, PayloadAction, ActionCreatorWithPreparedPayload } from '@reduxjs/toolkit';\nimport { UsersState } from '../types/UsersState';\nimport { MinimalUserData, MinimalUser } from '../types/MinimalUser';\n\ntype UsersMinimalState = UsersState<MinimalUserData, unknown>;\n\nconst initialState: Readonly<UsersMinimalState> = Object.freeze({\n    values: new Map()\n});\n\ntype ReducerFunction = (state: UsersMinimalState, action: PayloadAction<UsersMinimalState>) => void;\ninterface ExtraReducers<ThunkArg = void> {\n    [key: string]: {\n        callback: ReducerFunction;\n        fullfilled: ActionCreatorWithPreparedPayload<[UsersMinimalState, string, ThunkArg], UsersMinimalState, string, never>;\n    };\n}\n\n// eslint-disable-next-line\nexport function createUsersSlice<T extends MinimalUserData, S, ThunkArg = void>(\n    reducers?: ExtraReducers<ThunkArg>,\n    extraReducers?: ExtraReducers<ThunkArg>\n) {\n    return createSlice({\n        name: 'users',\n        initialState,\n        reducers: {\n            setUser: (state, action: PayloadAction<MinimalUser<T, S>>): void => {\n                state.values.set(action.payload.id(), action.payload);\n            },\n            ...reducers\n        },\n        extraReducers: (builder) => {\n            // Inject extra reducers\n            if (extraReducers != null) {\n                const keys = Object.keys(extraReducers);\n                if (keys.length > 0) {\n                    for (const reducerKey of keys) {\n                        const data = extraReducers[reducerKey];\n                        builder.addCase(data.fullfilled, data.callback);\n                    }\n                }\n            }\n        }\n    });\n}\n\nexport type UsersSlice = ReturnType<typeof createUsersSlice>;\n","import { ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { MinimalExpectedReduxState } from '../..';\nimport { MinimalExpectedDatabase } from '../../types/MinimalExpectedDatabase';\nimport { MinimalUserData } from '../../types';\nimport { UsersSlice } from '../../slices';\n\nexport function createUser<T extends MinimalUserData, S>(database: MinimalExpectedDatabase<T, S>, data: T, usersSlice: UsersSlice) {\n    return async (dispatch: ThunkDispatch<Promise<void>, MinimalExpectedReduxState, Action>): Promise<void> => {\n        const userDocument = await database.collections.users.createDocument(data);\n        dispatch(usersSlice.actions.setUser(userDocument));\n    };\n}\n"],"names":["isAuthenticationState","value","castedValue","loading","isMinimalExpectedReduxState","authentication","users","getState","state","Error","useAuthenticationState","useSelector","isUsersState","casted","values","getUsers","useCurrentUser","authState","firebaseUser","get","uid","subscribeForAuthenticatedUser","slice","dispatch","firebase","auth","onAuthStateChanged","user","actions","setAuthenticationState","error","alert","message","subscribeForUser","database","id","usersSlice","onFetchDone","collections","subscribeToDocument","newDocument","setUser","Authenticate","props","authenticationState","currentUser","useState","listeningForUser","setListeningForUser","useEffect","unsubscribe","undefined","loadingComponent","authenticationComponent","userNotAvailableComponent","children","mapDispatchToProps","ownProps","authenticationSlice","connect","signIn","createAsyncThunk","signInWithEmailAndPassword","email","password","userCredential","signOut","signUp","createUserWithEmailAndPassword","initialState","Object","freeze","replaceAuthenticationState","action","payload","createAuthenticationSlice","reducers","extraReducers","createSlice","name","setFirebaseUser","setLoadingFirebaseData","builder","addCase","fulfilled","keys","length","reducerKey","data","fullfilled","callback","authSlice","Firebase","firebaseReady","setFirebaseReady","firebaseConfig","Map","createUsersSlice","set","createUser","createDocument","userDocument"],"mappings":"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"}