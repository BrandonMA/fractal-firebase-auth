{"version":3,"file":"index.js","sources":["../src/redux/types/AuthenticationState.ts","../src/redux/types/MinimalExpectedReduxState.ts","../src/redux/hooks/useAuthenticationState.tsx","../src/redux/types/UsersState.ts","../src/redux/hooks/useCurrentUser.tsx","../src/redux/thunks/Authentication/signIn.ts","../src/redux/thunks/Authentication/signOut.ts","../src/redux/thunks/Authentication/signUp.ts","../src/redux/thunks/Authentication/subscribeForAuthenticatedUser.ts","../src/redux/thunks/Users/createUser.ts","../src/redux/hooks/useSignIn.tsx","../src/redux/hooks/useSignOut.tsx","../src/redux/hooks/useSignUp.tsx","../src/redux/hooks/useSubscribeForAuthenticatedUser.tsx","../src/redux/thunks/Users/subscribeForUser.ts","../src/redux/hooks/useSubscribeForUser.tsx","../src/redux/slices/createAuthenticationSlice.ts","../src/redux/slices/createUsersSlice.ts","../src/Authenticate.tsx","../src/Firebase.tsx"],"sourcesContent":["import * as firebase from 'firebase/app';\n\nexport interface AuthenticationState {\n    firebaseUser: firebase.User | undefined | null;\n    loading: boolean;\n}\n\nexport function isAuthenticationState(value: unknown): value is AuthenticationState {\n    const castedValue = value as AuthenticationState;\n    return castedValue.loading != null;\n}\n","import { AuthenticationState, isAuthenticationState } from './AuthenticationState';\nimport { UsersState } from './UsersState';\nimport { MinimalUserData } from './MinimalUser';\n\nexport type MinimalExpectedReduxState = {\n    authentication: AuthenticationState;\n    users: UsersState<MinimalUserData, unknown>;\n};\n\nexport function isMinimalExpectedReduxState(value: unknown): value is MinimalExpectedReduxState {\n    const castedValue = value as MinimalExpectedReduxState;\n    return castedValue.authentication != null && isAuthenticationState(castedValue.authentication) && castedValue.users != null;\n}\n","import { useSelector } from 'react-redux';\nimport { AuthenticationState } from '../types/AuthenticationState';\nimport { isMinimalExpectedReduxState } from '../types/MinimalExpectedReduxState';\n\nfunction getState(state: unknown): Readonly<AuthenticationState> {\n    if (isMinimalExpectedReduxState(state)) {\n        return state.authentication;\n    } else {\n        throw Error('State does not have the expected shape');\n    }\n}\n\nexport function useAuthenticationState(): Readonly<AuthenticationState> {\n    return useSelector(getState);\n}\n","import { MinimalUser, MinimalUserData } from './MinimalUser';\n\nexport interface UsersState<T extends MinimalUserData, S> {\n    values: Map<string, MinimalUser<T, S>>;\n}\n\nexport function isUsersState<T extends MinimalUserData, S>(value: unknown): value is UsersState<T, S> {\n    const casted = value as UsersState<T, S>;\n    return casted.values != null;\n}\n","import { useSelector } from 'react-redux';\nimport { MinimalUser, MinimalUserData } from '../types/MinimalUser';\nimport { useAuthenticationState } from './useAuthenticationState';\nimport { isMinimalExpectedReduxState, UsersState, isUsersState } from '../types';\n\nfunction getUsers<T extends MinimalUserData, S>(state: unknown): Readonly<UsersState<T, S>> {\n    if (isMinimalExpectedReduxState(state) && isUsersState<T, S>(state.users)) {\n        return state.users;\n    } else {\n        throw Error('State does not have the expected shape');\n    }\n}\n\nexport function useCurrentUser<T extends MinimalUserData, S>(): MinimalUser<T, S> | null | undefined {\n    const authState = useAuthenticationState();\n    const users = useSelector(getUsers);\n    if (authState.firebaseUser != null) {\n        return users.values.get(authState.firebaseUser.uid) as MinimalUser<T, S> | null | undefined;\n    } else {\n        return null;\n    }\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { AuthenticationState } from '../../types/AuthenticationState';\nimport { EmailPasswordPair } from '../../types/EmailPasswordPair';\n\nexport const signIn = createAsyncThunk(\n    'authentication/signIn',\n    async (user: EmailPasswordPair): Promise<AuthenticationState> => {\n        const userCredential = await firebase.auth().signInWithEmailAndPassword(user.email, user.password);\n        return {\n            firebaseUser: userCredential.user,\n            loading: false\n        };\n    }\n);\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { AuthenticationState } from '../../types/AuthenticationState';\n\nexport const signOut = createAsyncThunk(\n    'authentication/signOut',\n    async (): Promise<AuthenticationState> => {\n        await firebase.auth().signOut();\n        return {\n            firebaseUser: undefined,\n            loading: false\n        };\n    }\n);\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { AuthenticationState } from '../../types/AuthenticationState';\nimport { EmailPasswordPair } from '../../types/EmailPasswordPair';\n\nexport const signUp = createAsyncThunk(\n    'authentication/signUp',\n    async (user: EmailPasswordPair): Promise<AuthenticationState> => {\n        const userCredential = await firebase.auth().createUserWithEmailAndPassword(user.email, user.password);\n        return {\n            firebaseUser: userCredential.user,\n            loading: false\n        };\n    }\n);\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { AuthenticationSlice, MinimalExpectedReduxState } from '../..';\n\nexport const subscribeForAuthenticatedUser = (slice: AuthenticationSlice) => (\n    dispatch: ThunkDispatch<firebase.Unsubscribe, MinimalExpectedReduxState, Action>\n): firebase.Unsubscribe => {\n    return firebase.auth().onAuthStateChanged(\n        (user) => {\n            dispatch(\n                slice.actions.setAuthenticationState({\n                    firebaseUser: user,\n                    loading: false\n                })\n            );\n        },\n        (error) => {\n            alert(error.message);\n        }\n    );\n};\n","import { ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { MinimalExpectedReduxState } from '../..';\nimport { MinimalExpectedDatabase } from '../../types/MinimalExpectedDatabase';\nimport { MinimalUserData } from '../../types';\nimport { UsersSlice } from '../../slices';\n\nexport function createUser<T extends MinimalUserData, S>(database: MinimalExpectedDatabase<T, S>, data: T, usersSlice: UsersSlice) {\n    return async (dispatch: ThunkDispatch<Promise<void>, MinimalExpectedReduxState, Action>): Promise<void> => {\n        const userDocument = await database.collections.users.createDocument(data);\n        dispatch(usersSlice.actions.setUser(userDocument));\n    };\n}\n","import { useDispatch } from 'react-redux';\nimport { signIn } from '../thunks';\nimport { useCallback } from 'react';\n\nexport function useSignIn(email: string, password: string): () => Promise<void> {\n    const dispatch = useDispatch();\n    return useCallback(async () => {\n        await dispatch(\n            signIn({\n                email,\n                password\n            })\n        );\n    }, [email, password, dispatch]);\n}\n","import { useDispatch } from 'react-redux';\nimport { signOut } from '../thunks';\nimport { useCallback } from 'react';\n\nexport function useSignOut(): () => Promise<void> {\n    const dispatch = useDispatch();\n    return useCallback(async () => {\n        await dispatch(signOut());\n    }, [dispatch]);\n}\n","import { useDispatch } from 'react-redux';\nimport { signUp } from '../thunks';\nimport { useCallback } from 'react';\n\nexport function useSignUp(email: string, password: string): () => Promise<void> {\n    const dispatch = useDispatch();\n    return useCallback(async () => {\n        await dispatch(\n            signUp({\n                email,\n                password\n            })\n        );\n    }, [email, password, dispatch]);\n}\n","import { useDispatch } from 'react-redux';\nimport { subscribeForAuthenticatedUser } from '../thunks';\nimport { AuthenticationSlice } from '../slices/createAuthenticationSlice';\nimport { MinimalExpectedReduxState } from '../types/MinimalExpectedReduxState';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { useCallback } from 'react';\n\nexport function useSubscribeForAuthenticatedUser(slice: AuthenticationSlice): () => firebase.Unsubscribe {\n    const dispatch = useDispatch<ThunkDispatch<firebase.Unsubscribe, MinimalExpectedReduxState, Action>>();\n    return useCallback(() => {\n        return dispatch(subscribeForAuthenticatedUser(slice));\n    }, [dispatch, slice]);\n}\n","import firebase from 'firebase/app';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { MinimalExpectedReduxState } from '../..';\nimport { MinimalExpectedDatabase } from '../../types/MinimalExpectedDatabase';\nimport { MinimalUserData } from '../../types';\nimport { UsersSlice } from '../../slices';\n\nexport function subscribeForUser<T extends MinimalUserData, S>(\n    database: MinimalExpectedDatabase<T, S>,\n    id: string,\n    usersSlice: UsersSlice,\n    onFetchDone?: () => void\n) {\n    return (dispatch: ThunkDispatch<Promise<void>, MinimalExpectedReduxState, Action>): firebase.Unsubscribe => {\n        return database.collections.users.subscribeToDocument(\n            id,\n            (newDocument) => {\n                dispatch(usersSlice.actions.setUser(newDocument));\n                if (onFetchDone) {\n                    onFetchDone();\n                }\n            },\n            (error) => {\n                alert(error.message);\n            },\n            () => {\n                if (onFetchDone) {\n                    onFetchDone();\n                }\n            }\n        );\n    };\n}\n","import { useDispatch } from 'react-redux';\nimport { MinimalExpectedReduxState } from '../types/MinimalExpectedReduxState';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { useCallback } from 'react';\nimport { subscribeForUser } from '../thunks/Users/subscribeForUser';\nimport { MinimalExpectedDatabase } from '../types/MinimalExpectedDatabase';\nimport { UsersSlice } from '../slices/createUsersSlice';\nimport { MinimalUserData } from '../types/MinimalUser';\n\nexport function useSubscribeForUser<T extends MinimalUserData, S>(\n    database: MinimalExpectedDatabase<T, S>,\n    id: string,\n    usersSlice: UsersSlice,\n    onFetchDone?: () => void\n): () => firebase.Unsubscribe {\n    const dispatch = useDispatch<ThunkDispatch<firebase.Unsubscribe, MinimalExpectedReduxState, Action>>();\n    return useCallback(() => {\n        return dispatch(subscribeForUser(database, id, usersSlice, onFetchDone));\n    }, [dispatch, database, id, usersSlice, onFetchDone]);\n}\n","import { createSlice, PayloadAction, ActionCreatorWithPreparedPayload } from '@reduxjs/toolkit';\nimport { AuthenticationState } from '../types/AuthenticationState';\nimport { signIn } from '../thunks/Authentication/signIn';\nimport { signOut } from '../thunks/Authentication/signOut';\nimport { signUp } from '../thunks/Authentication/signUp';\nimport * as firebase from 'firebase/app';\n\nconst initialState: Readonly<AuthenticationState> = Object.freeze({\n    firebaseUser: undefined,\n    loading: true\n});\n\ntype ReducerFunction = (state: AuthenticationState, action: PayloadAction<AuthenticationState>) => void;\ninterface ExtraReducers<ThunkArg = void> {\n    [key: string]: {\n        callback: ReducerFunction;\n        fullfilled: ActionCreatorWithPreparedPayload<[AuthenticationState, string, ThunkArg], AuthenticationState, string, never>;\n    };\n}\n\nfunction replaceAuthenticationState(state: AuthenticationState, action: PayloadAction<AuthenticationState>): void {\n    state.loading = action.payload.loading;\n    state.firebaseUser = action.payload.firebaseUser;\n}\n\n// eslint-disable-next-line\nexport function createAuthenticationSlice<ThunkArg = void>(reducers?: ExtraReducers<ThunkArg>, extraReducers?: ExtraReducers<ThunkArg>) {\n    return createSlice({\n        name: 'authentication',\n        initialState,\n        reducers: {\n            setFirebaseUser: (state, action: PayloadAction<firebase.User | null | undefined>): void => {\n                state.firebaseUser = action.payload;\n            },\n            setLoadingFirebaseData: (state, action: PayloadAction<boolean>): void => {\n                state.loading = action.payload;\n            },\n            setAuthenticationState: replaceAuthenticationState,\n            ...reducers\n        },\n        extraReducers: (builder) => {\n            builder.addCase(signIn.fulfilled, replaceAuthenticationState);\n            builder.addCase(signOut.fulfilled, replaceAuthenticationState);\n            builder.addCase(signUp.fulfilled, replaceAuthenticationState);\n\n            // Inject extra reducers\n            if (extraReducers != null) {\n                const keys = Object.keys(extraReducers);\n                if (keys.length > 0) {\n                    for (const reducerKey of keys) {\n                        const data = extraReducers[reducerKey];\n                        builder.addCase(data.fullfilled, data.callback);\n                    }\n                }\n            }\n        }\n    });\n}\n\nexport type AuthenticationSlice = ReturnType<typeof createAuthenticationSlice>;\n","import { createSlice, PayloadAction, ActionCreatorWithPreparedPayload } from '@reduxjs/toolkit';\nimport { UsersState } from '../types/UsersState';\nimport { MinimalUserData, MinimalUser } from '../types/MinimalUser';\n\ntype UsersMinimalState = UsersState<MinimalUserData, unknown>;\n\nconst initialState: Readonly<UsersMinimalState> = Object.freeze({\n    values: new Map()\n});\n\ntype ReducerFunction = (state: UsersMinimalState, action: PayloadAction<UsersMinimalState>) => void;\ninterface ExtraReducers<ThunkArg = void> {\n    [key: string]: {\n        callback: ReducerFunction;\n        fullfilled: ActionCreatorWithPreparedPayload<[UsersMinimalState, string, ThunkArg], UsersMinimalState, string, never>;\n    };\n}\n\n// eslint-disable-next-line\nexport function createUsersSlice<T extends MinimalUserData, S, ThunkArg = void>(\n    reducers?: ExtraReducers<ThunkArg>,\n    extraReducers?: ExtraReducers<ThunkArg>\n) {\n    return createSlice({\n        name: 'users',\n        initialState,\n        reducers: {\n            setUser: (state, action: PayloadAction<MinimalUser<T, S>>): void => {\n                state.values.set(action.payload.id(), action.payload);\n            },\n            ...reducers\n        },\n        extraReducers: (builder) => {\n            // Inject extra reducers\n            if (extraReducers != null) {\n                const keys = Object.keys(extraReducers);\n                if (keys.length > 0) {\n                    for (const reducerKey of keys) {\n                        const data = extraReducers[reducerKey];\n                        builder.addCase(data.fullfilled, data.callback);\n                    }\n                }\n            }\n        }\n    });\n}\n\nexport type UsersSlice = ReturnType<typeof createUsersSlice>;\n","import { useAuthenticationState } from './redux/hooks/useAuthenticationState';\nimport { useCurrentUser } from './redux/hooks/useCurrentUser';\nimport { AuthenticationSlice, MinimalUserData, UsersSlice, useSubscribeForAuthenticatedUser, useSubscribeForUser } from './redux';\nimport { useEffect, useState, useCallback } from 'react';\nimport { MinimalExpectedDatabase } from './redux/types/MinimalExpectedDatabase';\n\ninterface Props {\n    database: MinimalExpectedDatabase<MinimalUserData, null>;\n    authenticationSlice: AuthenticationSlice;\n    usersSlice: UsersSlice;\n    loadingComponent: JSX.Element;\n    authenticationComponent: JSX.Element;\n    userNotAvailableComponent: JSX.Element;\n    children: JSX.Element;\n}\n\nexport default function Authenticate(props: Props): JSX.Element {\n    const authenticationState = useAuthenticationState();\n    const currentUser = useCurrentUser();\n    const [listeningForUser, setListeningForUser] = useState(false);\n    const { database, authenticationSlice, usersSlice } = props;\n    const subscribeForAuthenticatedUser = useSubscribeForAuthenticatedUser(authenticationSlice);\n    const onFetch = useCallback(() => {\n        setListeningForUser(true);\n    }, []);\n    const subscribeForUser = useSubscribeForUser(database, authenticationState.firebaseUser?.uid ?? '', usersSlice, onFetch);\n\n    useEffect(() => {\n        const unsubscribe = subscribeForAuthenticatedUser();\n        return (): void => {\n            unsubscribe(); // Remove auth listening when the component is unmounted.\n        };\n    }, [subscribeForAuthenticatedUser]);\n\n    useEffect(() => {\n        let unsubscribe: firebase.Unsubscribe | undefined;\n        if (authenticationState.firebaseUser != null) {\n            unsubscribe = subscribeForUser();\n        }\n        return (): void => {\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        };\n    }, [subscribeForUser, authenticationState]);\n\n    if (authenticationState.firebaseUser === undefined && authenticationState.loading) {\n        return props.loadingComponent;\n    } else if (authenticationState.firebaseUser === null && authenticationState.loading === false) {\n        return props.authenticationComponent;\n    } else {\n        if (listeningForUser) {\n            if (currentUser == null) {\n                return props.userNotAvailableComponent;\n            } else {\n                return props.children;\n            }\n        }\n        return props.loadingComponent;\n    }\n}\n","import * as firebase from 'firebase/app';\nimport { useState, useEffect } from 'react';\nimport { createAuthenticationSlice } from './redux/slices/createAuthenticationSlice';\n\nconst authSlice = createAuthenticationSlice();\nauthSlice.actions.setLoadingFirebaseData(false);\n\ninterface Config {\n    [key: string]: string;\n}\n\ninterface Props {\n    children: JSX.Element;\n    firebaseConfig: Config;\n    loadingComponent: JSX.Element;\n}\n\nexport function Firebase(props: Props): JSX.Element {\n    const [firebaseReady, setFirebaseReady] = useState(false);\n    const { firebaseConfig } = props;\n\n    useEffect(() => {\n        firebase.initializeApp(firebaseConfig);\n        setFirebaseReady(true);\n    }, [firebaseConfig]);\n\n    return firebaseReady ? props.children : props.loadingComponent;\n}\n"],"names":["isAuthenticationState","value","castedValue","loading","isMinimalExpectedReduxState","authentication","users","getState","state","Error","useAuthenticationState","useSelector","isUsersState","casted","values","getUsers","useCurrentUser","authState","firebaseUser","get","uid","signIn","createAsyncThunk","user","firebase","signInWithEmailAndPassword","email","password","userCredential","signOut","undefined","signUp","createUserWithEmailAndPassword","subscribeForAuthenticatedUser","slice","dispatch","auth","onAuthStateChanged","actions","setAuthenticationState","error","alert","message","createUser","database","data","usersSlice","collections","createDocument","userDocument","setUser","useSignIn","useDispatch","useCallback","useSignOut","useSignUp","useSubscribeForAuthenticatedUser","subscribeForUser","id","onFetchDone","subscribeToDocument","newDocument","useSubscribeForUser","initialState","Object","freeze","replaceAuthenticationState","action","payload","createAuthenticationSlice","reducers","extraReducers","createSlice","name","setFirebaseUser","setLoadingFirebaseData","builder","addCase","fulfilled","keys","length","reducerKey","fullfilled","callback","Map","createUsersSlice","set","Authenticate","props","authenticationState","currentUser","useState","listeningForUser","setListeningForUser","authenticationSlice","onFetch","useEffect","unsubscribe","loadingComponent","authenticationComponent","userNotAvailableComponent","children","authSlice","Firebase","firebaseReady","setFirebaseReady","firebaseConfig"],"mappings":"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"}