{"version":3,"file":"index.modern.js","sources":["../src/redux/types/AuthenticationState.ts","../src/redux/types/MinimalExpectedReduxState.ts","../src/redux/hooks/useAuthenticationState.tsx","../src/redux/types/UsersState.ts","../src/redux/types/MinimalExpectedDatabase.ts","../src/redux/hooks/useCurrentUser.tsx","../src/redux/thunks/Authentication/signIn.ts","../src/redux/thunks/Authentication/signOut.ts","../src/redux/thunks/Authentication/signUp.ts","../src/redux/thunks/Authentication/subscribeForAuthenticatedUser.ts","../src/redux/thunks/Users/createUser.ts","../src/redux/hooks/useSignIn.tsx","../src/redux/hooks/useSignOut.tsx","../src/redux/hooks/useSignUp.tsx","../src/redux/hooks/useSubscribeForAuthenticatedUser.tsx","../src/redux/thunks/Users/subscribeForUser.ts","../src/redux/hooks/useSubscribeForUser.tsx","../src/redux/thunks/Users/updateUser.ts","../src/redux/hooks/useUpdateUser.tsx","../src/redux/hooks/useCreateUser.tsx","../src/redux/slices/createAuthenticationSlice.ts","../src/redux/slices/createUsersSlice.ts","../src/Authenticate.tsx","../src/Firebase.tsx"],"sourcesContent":["import * as firebase from 'firebase/app';\n\nexport interface AuthenticationState {\n    firebaseUser: firebase.User | undefined | null;\n    loading: boolean;\n}\n\nexport function isAuthenticationState(value: unknown): value is AuthenticationState {\n    const castedValue = value as AuthenticationState;\n    return castedValue.loading != null;\n}\n","import { AuthenticationState, isAuthenticationState } from './AuthenticationState';\nimport { UsersState } from './UsersState';\nimport { MinimalUserData } from './MinimalUser';\n\nexport type MinimalExpectedReduxState = {\n    authentication: AuthenticationState;\n    users: UsersState<MinimalUserData, unknown>;\n};\n\nexport function isMinimalExpectedReduxState(value: unknown): value is MinimalExpectedReduxState {\n    const castedValue = value as MinimalExpectedReduxState;\n    return castedValue.authentication != null && isAuthenticationState(castedValue.authentication) && castedValue.users != null;\n}\n","import { useSelector } from 'react-redux';\nimport { AuthenticationState } from '../types/AuthenticationState';\nimport { isMinimalExpectedReduxState } from '../types/MinimalExpectedReduxState';\n\nfunction getState(state: unknown): Readonly<AuthenticationState> {\n    if (isMinimalExpectedReduxState(state)) {\n        return state.authentication;\n    } else {\n        throw Error('State does not have the expected shape');\n    }\n}\n\nexport function useAuthenticationState(): Readonly<AuthenticationState> {\n    return useSelector(getState);\n}\n","import { MinimalUser, MinimalUserData } from './MinimalUser';\n\nexport interface UsersState<T extends MinimalUserData, S> {\n    values: Map<string, MinimalUser<T, S>>;\n}\n\nexport function isUsersState<T extends MinimalUserData, S>(value: unknown): value is UsersState<T, S> {\n    const casted = value as UsersState<T, S>;\n    return casted.values != null;\n}\n","import { Database, Collection } from 'firebase-db-manager';\nimport { MinimalUserData } from './MinimalUser';\n\ntype UsersCollection<T extends MinimalUserData, S> = Collection<T, S>;\nexport type MinimalExpectedDatabase<T extends MinimalUserData, S> = Database<{ users: UsersCollection<T, S> }>;\n\nexport function isMinimalExpectedDatabase<T extends MinimalUserData, S>(value: unknown): value is MinimalExpectedDatabase<T, S> {\n    const casted = value as MinimalExpectedDatabase<T, S>;\n    return casted.collections.users != null;\n}\n","import { useSelector } from 'react-redux';\nimport { MinimalUser, MinimalUserData } from '../types/MinimalUser';\nimport { useAuthenticationState } from './useAuthenticationState';\nimport { isMinimalExpectedReduxState, UsersState, isUsersState } from '../types';\n\nfunction getUsers<T extends MinimalUserData, S>(state: unknown): Readonly<UsersState<T, S>> {\n    if (isMinimalExpectedReduxState(state) && isUsersState<T, S>(state.users)) {\n        return state.users;\n    } else {\n        throw Error('State does not have the expected shape');\n    }\n}\n\nexport function useCurrentUser<T extends MinimalUserData, S>(): MinimalUser<T, S> | null | undefined {\n    const authState = useAuthenticationState();\n    const users = useSelector(getUsers);\n    if (authState.firebaseUser != null) {\n        return users.values.get(authState.firebaseUser.uid) as MinimalUser<T, S> | null | undefined;\n    } else {\n        return null;\n    }\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { AuthenticationState } from '../../types/AuthenticationState';\nimport { EmailPasswordPair } from '../../types/EmailPasswordPair';\n\nexport const signIn = createAsyncThunk(\n    'authentication/signIn',\n    async (user: EmailPasswordPair): Promise<AuthenticationState> => {\n        const userCredential = await firebase.auth().signInWithEmailAndPassword(user.email, user.password);\n        return {\n            firebaseUser: userCredential.user,\n            loading: false\n        };\n    }\n);\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { AuthenticationState } from '../../types/AuthenticationState';\n\nexport const signOut = createAsyncThunk(\n    'authentication/signOut',\n    async (): Promise<AuthenticationState> => {\n        await firebase.auth().signOut();\n        return {\n            firebaseUser: undefined,\n            loading: false\n        };\n    }\n);\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { AuthenticationState } from '../../types/AuthenticationState';\nimport { EmailPasswordPair } from '../../types/EmailPasswordPair';\n\nexport const signUp = createAsyncThunk(\n    'authentication/signUp',\n    async (user: EmailPasswordPair): Promise<AuthenticationState> => {\n        const userCredential = await firebase.auth().createUserWithEmailAndPassword(user.email, user.password);\n        return {\n            firebaseUser: userCredential.user,\n            loading: false\n        };\n    }\n);\n","import * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { MinimalExpectedReduxState } from '../..';\nimport { authenticationSlice } from '../../slices';\n\nexport const subscribeForAuthenticatedUser = (slice: typeof authenticationSlice) => (\n    dispatch: ThunkDispatch<firebase.Unsubscribe, MinimalExpectedReduxState, Action>\n): firebase.Unsubscribe => {\n    return firebase.auth().onAuthStateChanged(\n        (user) => {\n            dispatch(\n                slice.actions.setAuthenticationState({\n                    firebaseUser: user,\n                    loading: false\n                })\n            );\n        },\n        (error) => {\n            alert(error.message);\n        }\n    );\n};\n","import { ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { MinimalExpectedReduxState } from '../..';\nimport { MinimalExpectedDatabase } from '../../types/MinimalExpectedDatabase';\nimport { MinimalUserData } from '../../types';\nimport { UsersSlice } from '../../slices';\n\nexport function createUser<T extends MinimalUserData, S>(database: MinimalExpectedDatabase<T, S>, data: T, usersSlice: UsersSlice) {\n    return async (dispatch: ThunkDispatch<Promise<void>, MinimalExpectedReduxState, Action>): Promise<void> => {\n        const userDocument = await database.collections.users.createDocument(data);\n        dispatch(usersSlice.actions.setUser(userDocument));\n    };\n}\n","import { useDispatch } from 'react-redux';\nimport { signIn } from '../thunks';\nimport { useCallback } from 'react';\n\nexport function useSignIn(email: string, password: string): () => Promise<void> {\n    const dispatch = useDispatch();\n    return useCallback(async () => {\n        await dispatch(\n            signIn({\n                email,\n                password\n            })\n        );\n    }, [email, password, dispatch]);\n}\n","import { useDispatch } from 'react-redux';\nimport { signOut } from '../thunks';\nimport { useCallback } from 'react';\n\nexport function useSignOut(): () => Promise<void> {\n    const dispatch = useDispatch();\n    return useCallback(async () => {\n        await dispatch(signOut());\n    }, [dispatch]);\n}\n","import { useDispatch } from 'react-redux';\nimport { signUp } from '../thunks';\nimport { useCallback } from 'react';\n\nexport function useSignUp(email: string, password: string): () => Promise<void> {\n    const dispatch = useDispatch();\n    return useCallback(async () => {\n        await dispatch(\n            signUp({\n                email,\n                password\n            })\n        );\n    }, [email, password, dispatch]);\n}\n","import { useDispatch } from 'react-redux';\nimport { subscribeForAuthenticatedUser } from '../thunks';\nimport { MinimalExpectedReduxState } from '../types/MinimalExpectedReduxState';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { useCallback } from 'react';\nimport { authenticationSlice } from '../slices';\n\nexport function useSubscribeForAuthenticatedUser(slice: typeof authenticationSlice): () => firebase.Unsubscribe {\n    const dispatch = useDispatch<ThunkDispatch<firebase.Unsubscribe, MinimalExpectedReduxState, Action>>();\n    return useCallback(() => {\n        return dispatch(subscribeForAuthenticatedUser(slice));\n    }, [dispatch, slice]);\n}\n","import firebase from 'firebase/app';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { MinimalExpectedReduxState } from '../..';\nimport { MinimalExpectedDatabase } from '../../types/MinimalExpectedDatabase';\nimport { MinimalUserData } from '../../types';\nimport { UsersSlice } from '../../slices';\n\nexport function subscribeForUser<T extends MinimalUserData, S>(\n    database: MinimalExpectedDatabase<T, S>,\n    id: string,\n    usersSlice: UsersSlice,\n    onFetchDone?: () => void\n) {\n    return (dispatch: ThunkDispatch<Promise<void>, MinimalExpectedReduxState, Action>): firebase.Unsubscribe => {\n        return database.collections.users.subscribeToDocument(\n            id,\n            (newDocument) => {\n                dispatch(usersSlice.actions.setUser(newDocument));\n                if (onFetchDone) {\n                    onFetchDone();\n                }\n            },\n            (error) => {\n                alert(error.message);\n            },\n            () => {\n                if (onFetchDone) {\n                    onFetchDone();\n                }\n            }\n        );\n    };\n}\n","import { useDispatch } from 'react-redux';\nimport { MinimalExpectedReduxState } from '../types/MinimalExpectedReduxState';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { useCallback } from 'react';\nimport { subscribeForUser } from '../thunks/Users/subscribeForUser';\nimport { MinimalExpectedDatabase } from '../types/MinimalExpectedDatabase';\nimport { UsersSlice } from '../slices/createUsersSlice';\nimport { MinimalUserData } from '../types/MinimalUser';\n\nexport function useSubscribeForUser<T extends MinimalUserData, S>(\n    database: MinimalExpectedDatabase<T, S>,\n    id: string,\n    usersSlice: UsersSlice,\n    onFetchDone?: () => void\n): () => firebase.Unsubscribe {\n    const dispatch = useDispatch<ThunkDispatch<firebase.Unsubscribe, MinimalExpectedReduxState, Action>>();\n    return useCallback(() => {\n        return dispatch(subscribeForUser(database, id, usersSlice, onFetchDone));\n    }, [dispatch, database, id, usersSlice, onFetchDone]);\n}\n","import { ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { MinimalExpectedReduxState } from '../..';\nimport { MinimalExpectedDatabase } from '../../types/MinimalExpectedDatabase';\nimport { MinimalUserData } from '../../types';\nimport { UsersSlice } from '../../slices';\n\nexport function updateUser<T extends MinimalUserData, S>(database: MinimalExpectedDatabase<T, S>, data: T, usersSlice: UsersSlice) {\n    return async (dispatch: ThunkDispatch<Promise<void>, MinimalExpectedReduxState, Action>): Promise<void> => {\n        const userDocument = await database.collections.users.updateDocument(data);\n        dispatch(usersSlice.actions.setUser(userDocument));\n    };\n}\n","import { useDispatch } from 'react-redux';\nimport { MinimalExpectedReduxState } from '../types/MinimalExpectedReduxState';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { useCallback } from 'react';\nimport { UsersSlice } from '../slices/createUsersSlice';\nimport { MinimalUserData } from '../types/MinimalUser';\nimport { MinimalExpectedDatabase } from '../types/MinimalExpectedDatabase';\nimport { updateUser } from '../thunks/Users/updateUser';\n\nexport function useUpdateUser<T extends MinimalUserData, S>(\n    database: MinimalExpectedDatabase<T, S>,\n    usersSlice: UsersSlice\n): (data: T) => Promise<void> {\n    const dispatch = useDispatch<ThunkDispatch<Promise<void>, MinimalExpectedReduxState, Action>>();\n    return useCallback(\n        (data: T) => {\n            return dispatch(updateUser(database, data, usersSlice));\n        },\n        [dispatch, database, usersSlice]\n    );\n}\n","import { useDispatch } from 'react-redux';\nimport { createUser } from '../thunks';\nimport { MinimalExpectedReduxState } from '../types/MinimalExpectedReduxState';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { Action } from 'redux';\nimport { useCallback } from 'react';\nimport { UsersSlice } from '../slices/createUsersSlice';\nimport { MinimalUserData } from '../types/MinimalUser';\nimport { MinimalExpectedDatabase } from '../types/MinimalExpectedDatabase';\n\nexport function useCreateUser<T extends MinimalUserData, S>(\n    database: MinimalExpectedDatabase<T, S>,\n    data: T,\n    usersSlice: UsersSlice\n): () => Promise<void> {\n    const dispatch = useDispatch<ThunkDispatch<Promise<void>, MinimalExpectedReduxState, Action>>();\n    return useCallback(() => {\n        return dispatch(createUser(database, data, usersSlice));\n    }, [dispatch, database, data, usersSlice]);\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AuthenticationState } from '../types/AuthenticationState';\nimport { signIn } from '../thunks/Authentication/signIn';\nimport { signOut } from '../thunks/Authentication/signOut';\nimport { signUp } from '../thunks/Authentication/signUp';\nimport * as firebase from 'firebase/app';\n\nconst initialState: Readonly<AuthenticationState> = Object.freeze({\n    firebaseUser: undefined,\n    loading: true\n});\n\nfunction replaceAuthenticationState(state: AuthenticationState, action: PayloadAction<AuthenticationState>): void {\n    state.loading = action.payload.loading;\n    state.firebaseUser = action.payload.firebaseUser;\n}\n\nexport const authenticationSlice = createSlice({\n    name: 'authentication',\n    initialState,\n    reducers: {\n        setFirebaseUser: (state, action: PayloadAction<firebase.User | null | undefined>): void => {\n            state.firebaseUser = action.payload;\n        },\n        setLoadingFirebaseData: (state, action: PayloadAction<boolean>): void => {\n            state.loading = action.payload;\n        },\n        setAuthenticationState: replaceAuthenticationState\n    },\n    extraReducers: (builder) => {\n        builder.addCase(signIn.fulfilled, replaceAuthenticationState);\n        builder.addCase(signOut.fulfilled, replaceAuthenticationState);\n        builder.addCase(signUp.fulfilled, replaceAuthenticationState);\n    }\n});\n","import { createSlice, PayloadAction, Slice } from '@reduxjs/toolkit';\nimport { UsersState } from '../types/UsersState';\nimport { MinimalUserData, MinimalUser } from '../types/MinimalUser';\n\ntype UsersMinimalState = UsersState<MinimalUserData, unknown>;\n\nconst initialState: Readonly<UsersMinimalState> = Object.freeze({\n    values: new Map()\n});\n\nexport function createUsersSlice<T extends MinimalUserData, S>(): Slice<\n    Readonly<UsersMinimalState>,\n    {\n        setUser: (state: UsersMinimalState, action: PayloadAction<MinimalUser<T, S>>) => void;\n    },\n    'users'\n> {\n    return createSlice({\n        name: 'users',\n        initialState,\n        reducers: {\n            setUser: (state, action: PayloadAction<MinimalUser<T, S>>): void => {\n                state.values.set(action.payload.id(), action.payload);\n            }\n        }\n    });\n}\n\nexport type UsersSlice = ReturnType<typeof createUsersSlice>;\n","import { useAuthenticationState } from './redux/hooks/useAuthenticationState';\nimport { useCurrentUser } from './redux/hooks/useCurrentUser';\nimport { MinimalUserData, UsersSlice, useSubscribeForAuthenticatedUser, useSubscribeForUser, authenticationSlice } from './redux';\nimport { useEffect, useState, useCallback } from 'react';\nimport { MinimalExpectedDatabase } from './redux/types/MinimalExpectedDatabase';\n\ninterface Props {\n    database: MinimalExpectedDatabase<MinimalUserData, null>;\n    authenticationSlice: typeof authenticationSlice;\n    usersSlice: UsersSlice;\n    loadingComponent: JSX.Element;\n    authenticationComponent: JSX.Element;\n    userNotAvailableComponent: JSX.Element;\n    children: JSX.Element;\n}\n\nexport function Authenticate(props: Props): JSX.Element {\n    const authenticationState = useAuthenticationState();\n    const currentUser = useCurrentUser();\n    const [listeningForUser, setListeningForUser] = useState(false);\n    const { database, authenticationSlice, usersSlice } = props;\n    const subscribeForAuthenticatedUser = useSubscribeForAuthenticatedUser(authenticationSlice);\n    const onFetch = useCallback(() => {\n        setListeningForUser(true);\n    }, []);\n    const subscribeForUser = useSubscribeForUser(database, authenticationState.firebaseUser?.uid ?? '', usersSlice, onFetch);\n\n    useEffect(() => {\n        const unsubscribe = subscribeForAuthenticatedUser();\n        return (): void => {\n            unsubscribe(); // Remove auth listening when the component is unmounted.\n        };\n    }, [subscribeForAuthenticatedUser]);\n\n    useEffect(() => {\n        let unsubscribe: firebase.Unsubscribe | undefined;\n        if (authenticationState.firebaseUser != null) {\n            unsubscribe = subscribeForUser();\n        }\n        return (): void => {\n            if (unsubscribe) {\n                unsubscribe();\n            }\n        };\n    }, [subscribeForUser, authenticationState]);\n\n    if (authenticationState.firebaseUser === undefined && authenticationState.loading) {\n        return props.loadingComponent;\n    } else if (authenticationState.firebaseUser === null && authenticationState.loading === false) {\n        return props.authenticationComponent;\n    } else {\n        if (listeningForUser) {\n            if (currentUser == null) {\n                return props.userNotAvailableComponent;\n            } else {\n                return props.children;\n            }\n        }\n        return props.loadingComponent;\n    }\n}\n","import * as firebase from 'firebase/app';\nimport { useState, useEffect } from 'react';\n\ninterface Config {\n    [key: string]: string;\n}\n\ninterface Props {\n    children: JSX.Element;\n    firebaseConfig: Config;\n    loadingComponent: JSX.Element;\n}\n\nexport function Firebase(props: Props): JSX.Element {\n    const [firebaseReady, setFirebaseReady] = useState(false);\n    const { firebaseConfig } = props;\n\n    useEffect(() => {\n        firebase.initializeApp(firebaseConfig);\n        setFirebaseReady(true);\n    }, [firebaseConfig]);\n\n    return firebaseReady ? props.children : props.loadingComponent;\n}\n"],"names":["isAuthenticationState","value","castedValue","loading","isMinimalExpectedReduxState","authentication","users","getState","state","Error","useAuthenticationState","useSelector","isUsersState","casted","values","isMinimalExpectedDatabase","collections","getUsers","useCurrentUser","authState","firebaseUser","get","uid","signIn","createAsyncThunk","user","firebase","signInWithEmailAndPassword","email","password","userCredential","signOut","undefined","signUp","createUserWithEmailAndPassword","subscribeForAuthenticatedUser","slice","dispatch","onAuthStateChanged","actions","setAuthenticationState","error","alert","message","createUser","database","data","usersSlice","createDocument","userDocument","setUser","useSignIn","useDispatch","useCallback","useSignOut","useSignUp","useSubscribeForAuthenticatedUser","subscribeForUser","id","onFetchDone","subscribeToDocument","newDocument","useSubscribeForUser","updateUser","updateDocument","useUpdateUser","useCreateUser","initialState","Object","freeze","replaceAuthenticationState","action","payload","authenticationSlice","createSlice","name","reducers","setFirebaseUser","setLoadingFirebaseData","extraReducers","builder","addCase","fulfilled","Map","createUsersSlice","set","Authenticate","props","authenticationState","currentUser","useState","listeningForUser","setListeningForUser","onFetch","useEffect","unsubscribe","loadingComponent","authenticationComponent","userNotAvailableComponent","children","Firebase","firebaseReady","setFirebaseReady","firebaseConfig"],"mappings":"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"}