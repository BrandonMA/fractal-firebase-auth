{"version":3,"file":"index.modern.js","sources":["../src/redux/thunks/Authentication/signIn.ts","../src/redux/thunks/Authentication/signOut.ts","../src/redux/thunks/Authentication/signUp.ts","../src/redux/slices/createAuthenticationSlice.ts","../src/Firebase.tsx","../src/redux/types/AuthenticationState.ts","../src/redux/types/MinimalExpectedReduxState.ts","../src/redux/hooks/useAuthenticationState.tsx","../src/redux/hooks/useCurrentUser.tsx","../src/Authenticate.tsx","../src/redux/slices/createUsersSlice.ts"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { AuthenticationState } from '../../types/AuthenticationState';\nimport { EmailPasswordPair } from '../../types/EmailPasswordPair';\n\nexport const signIn = createAsyncThunk(\n    'authentication/signIn',\n    async (user: EmailPasswordPair): Promise<AuthenticationState> => {\n        const userCredential = await firebase.auth().signInWithEmailAndPassword(user.email, user.password);\n        return {\n            firebaseUser: userCredential.user,\n            loading: false\n        };\n    }\n);\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { AuthenticationState } from '../../types/AuthenticationState';\n\nexport const signOut = createAsyncThunk(\n    'authentication/signOut',\n    async (): Promise<AuthenticationState> => {\n        await firebase.auth().signOut();\n        return {\n            firebaseUser: undefined,\n            loading: false\n        };\n    }\n);\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport * as firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { AuthenticationState } from '../../types/AuthenticationState';\nimport { EmailPasswordPair } from '../../types/EmailPasswordPair';\n\nexport const signUp = createAsyncThunk(\n    'authentication/signUp',\n    async (user: EmailPasswordPair): Promise<AuthenticationState> => {\n        const userCredential = await firebase.auth().createUserWithEmailAndPassword(user.email, user.password);\n        return {\n            firebaseUser: userCredential.user,\n            loading: false\n        };\n    }\n);\n","import { createSlice, PayloadAction, ActionCreatorWithPreparedPayload } from '@reduxjs/toolkit';\nimport { AuthenticationState } from '../types/AuthenticationState';\nimport { signIn } from '../thunks/Authentication/signIn';\nimport { signOut } from '../thunks/Authentication/signOut';\nimport { signUp } from '../thunks/Authentication/signUp';\nimport * as firebase from 'firebase/app';\n\nconst initialState: Readonly<AuthenticationState> = Object.freeze({\n    firebaseUser: undefined,\n    loading: true\n});\n\ntype ReducerFunction = (state: AuthenticationState, action: PayloadAction<AuthenticationState>) => void;\ninterface ExtraReducers<ThunkArg = void> {\n    [key: string]: {\n        callback: ReducerFunction;\n        fullfilled: ActionCreatorWithPreparedPayload<[AuthenticationState, string, ThunkArg], AuthenticationState, string, never>;\n    };\n}\n\n// eslint-disable-next-line\nexport function createAuthenticationSlice<ThunkArg = void>(reducers?: ExtraReducers<ThunkArg>, extraReducers?: ExtraReducers<ThunkArg>) {\n    return createSlice({\n        name: 'authentication',\n        initialState,\n        reducers: {\n            setFirebaseUser: (state, action: PayloadAction<firebase.User | null | undefined>): void => {\n                state.firebaseUser = action.payload;\n            },\n            setLoadingFirebaseData: (state, action: PayloadAction<boolean>): void => {\n                state.loading = action.payload;\n            },\n            ...reducers\n        },\n        extraReducers: (builder) => {\n            const replaceAuthenticationState = (state: AuthenticationState, action: PayloadAction<AuthenticationState>): void => {\n                // Used to bypass the has not been read rule\n                if (state != null) {\n                    state = action.payload;\n                }\n            };\n\n            builder.addCase(signIn.fulfilled, replaceAuthenticationState);\n            builder.addCase(signOut.fulfilled, replaceAuthenticationState);\n            builder.addCase(signUp.fulfilled, replaceAuthenticationState);\n\n            // Inject extra reducers\n            if (extraReducers != null) {\n                const keys = Object.keys(extraReducers);\n                if (keys.length > 0) {\n                    for (const reducerKey of keys) {\n                        const data = extraReducers[reducerKey];\n                        builder.addCase(data.fullfilled, data.callback);\n                    }\n                }\n            }\n        }\n    });\n}\n","import * as firebase from 'firebase/app';\nimport { useState, useEffect } from 'react';\nimport { createAuthenticationSlice } from './redux/slices/createAuthenticationSlice';\n\nconst authSlice = createAuthenticationSlice();\nauthSlice.actions.setLoadingFirebaseData(false);\n\ninterface Config {\n    [key: string]: string;\n}\n\ninterface Props {\n    children: JSX.Element;\n    firebaseConfig: Config;\n    loadingComponent: JSX.Element;\n}\n\nexport function Firebase(props: Props): JSX.Element {\n    const [firebaseReady, setFirebaseReady] = useState(false);\n    const { firebaseConfig } = props;\n\n    useEffect(() => {\n        firebase.initializeApp(firebaseConfig);\n        setFirebaseReady(true);\n    }, [firebaseConfig]);\n\n    return firebaseReady ? props.children : props.loadingComponent;\n}\n","import * as firebase from 'firebase/app';\n\nexport interface AuthenticationState {\n    firebaseUser: firebase.User | undefined | null;\n    loading: boolean;\n}\n\nexport function isAuthenticationState(value: unknown): value is AuthenticationState {\n    const castedValue = value as AuthenticationState;\n    return castedValue.loading != null;\n}\n","import { AuthenticationState, isAuthenticationState } from './AuthenticationState';\nimport { UsersState } from './UsersState';\nimport { MinimalUser } from './MinimalUser';\n\nexport type MinimalExpectedReduxState = {\n    authentication: AuthenticationState;\n    users: UsersState<MinimalUser>;\n};\n\nexport function isMinimalExpectedReduxState(value: unknown): value is MinimalExpectedReduxState {\n    const castedValue = value as MinimalExpectedReduxState;\n    return castedValue.authentication != null && isAuthenticationState(castedValue.authentication) && castedValue.users != null;\n}\n","import { useSelector } from 'react-redux';\nimport { AuthenticationState } from '../types/AuthenticationState';\nimport { isMinimalExpectedReduxState } from '../types/MinimalExpectedReduxState';\n\nconst getState = (state: unknown): Readonly<AuthenticationState> => {\n    if (isMinimalExpectedReduxState(state)) {\n        return state.authentication;\n    } else {\n        throw Error('State does not have the expected shape');\n    }\n};\n\nexport const useAuthenticationState = (): Readonly<AuthenticationState> => {\n    return useSelector(getState);\n};\n","import { useSelector } from 'react-redux';\nimport { MinimalUser } from '../types/MinimalUser';\nimport { useAuthenticationState } from './useAuthenticationState';\nimport { isMinimalExpectedReduxState, UsersState } from '../types';\n\nfunction getUsers<T extends MinimalUser>(state: unknown): Readonly<UsersState<T>> {\n    if (isMinimalExpectedReduxState(state)) {\n        return state.users as UsersState<T>;\n    } else {\n        throw Error('State does not have the expected shape');\n    }\n}\n\nexport function useCurrentUser<T extends MinimalUser>(): Readonly<T> | null {\n    const authState = useAuthenticationState();\n    const users = useSelector(getUsers);\n    if (authState.firebaseUser != null) {\n        return users[authState.firebaseUser.uid] as Readonly<T>;\n    } else {\n        return null;\n    }\n}\n","import { useAuthenticationState } from './redux/hooks/useAuthenticationState';\nimport { useCurrentUser } from './redux/hooks/useCurrentUser';\n\ninterface Props {\n    loadingComponent: JSX.Element;\n    authenticationComponent: JSX.Element;\n    userNotAvailableComponent: JSX.Element;\n    children: JSX.Element;\n}\n\nexport function Authenticate(props: Props): JSX.Element {\n    const authenticationState = useAuthenticationState();\n    const currentUser = useCurrentUser();\n    if (authenticationState.firebaseUser === undefined && authenticationState.loading) {\n        return props.loadingComponent;\n    } else if (authenticationState.firebaseUser === null && authenticationState.loading === false) {\n        return props.authenticationComponent;\n    } else {\n        if (currentUser == null) {\n            return props.userNotAvailableComponent;\n        } else {\n            return props.children;\n        }\n    }\n}\n","import { createSlice, PayloadAction, ActionCreatorWithPreparedPayload } from '@reduxjs/toolkit';\nimport { UsersState } from '../types/UsersState';\nimport { MinimalUser } from '../types/MinimalUser';\n\ntype UsersMinimalState = UsersState<MinimalUser>;\n\nconst initialState: Readonly<UsersMinimalState> = Object.freeze({});\n\ntype ReducerFunction = (state: UsersMinimalState, action: PayloadAction<UsersMinimalState>) => void;\ninterface ExtraReducers<ThunkArg = void> {\n    [key: string]: {\n        callback: ReducerFunction;\n        fullfilled: ActionCreatorWithPreparedPayload<[UsersMinimalState, string, ThunkArg], UsersMinimalState, string, never>;\n    };\n}\n\n// eslint-disable-next-line\nexport function createUsersSlice<ThunkArg = void>(reducers?: ExtraReducers<ThunkArg>, extraReducers?: ExtraReducers<ThunkArg>) {\n    return createSlice({\n        name: 'users',\n        initialState,\n        reducers: {\n            setUser: (state, action: PayloadAction<MinimalUser>): void => {\n                state[action.payload.id] = action.payload;\n            },\n            ...reducers\n        },\n        extraReducers: (builder) => {\n            // Inject extra reducers\n            if (extraReducers != null) {\n                const keys = Object.keys(extraReducers);\n                if (keys.length > 0) {\n                    for (const reducerKey of keys) {\n                        const data = extraReducers[reducerKey];\n                        builder.addCase(data.fullfilled, data.callback);\n                    }\n                }\n            }\n        }\n    });\n}\n"],"names":["signIn","createAsyncThunk","user","firebase","signInWithEmailAndPassword","email","password","userCredential","firebaseUser","loading","signOut","undefined","signUp","createUserWithEmailAndPassword","initialState","Object","freeze","createAuthenticationSlice","reducers","extraReducers","createSlice","name","setFirebaseUser","state","action","payload","setLoadingFirebaseData","builder","replaceAuthenticationState","addCase","fulfilled","keys","length","reducerKey","data","fullfilled","callback","authSlice","actions","Firebase","props","useState","firebaseReady","setFirebaseReady","firebaseConfig","useEffect","children","loadingComponent","isAuthenticationState","value","castedValue","isMinimalExpectedReduxState","authentication","users","getState","Error","useAuthenticationState","useSelector","getUsers","useCurrentUser","authState","uid","Authenticate","authenticationState","currentUser","authenticationComponent","userNotAvailableComponent","createUsersSlice","setUser","id"],"mappings":"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"}