{"ast":null,"code":"import { useEffect } from 'react';\nimport subscribeForAuthenticatedUserThunk from \"../redux/thunks/subscribeForAuthenticatedUserThunk\";\nimport { connect } from 'react-redux';\n\nfunction Authentication(props) {\n  var subscribeForAuthenticatedUser = props.subscribeForAuthenticatedUser;\n  useEffect(function () {\n    subscribeForAuthenticatedUser();\n  }, [subscribeForAuthenticatedUser]);\n  return props.children;\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    subscribeForAuthenticatedUser: function subscribeForAuthenticatedUser() {\n      dispatch(subscribeForAuthenticatedUserThunk());\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Authentication);","map":{"version":3,"sources":["/Users/brandonmaldonadoalonso/GitHub/react-firebase-auth/ExampleProject/components/Authenticator.tsx"],"names":["useEffect","subscribeForAuthenticatedUserThunk","connect","Authentication","props","subscribeForAuthenticatedUser","children","mapDispatchToProps","dispatch"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AAIA,OAAOC,kCAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAUA,SAASC,cAAT,CAAwBC,KAAxB,EAAmD;AAAA,MACvCC,6BADuC,GACLD,KADK,CACvCC,6BADuC;AAG/CL,EAAAA,SAAS,CAAC,YAAM;AACZK,IAAAA,6BAA6B;AAChC,GAFQ,EAEN,CAACA,6BAAD,CAFM,CAAT;AAIA,SAAOD,KAAK,CAACE,QAAb;AACH;;AAED,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SAAsE;AAC7FH,IAAAA,6BAD6F,2CACvD;AAClCG,MAAAA,QAAQ,CAACP,kCAAkC,EAAnC,CAAR;AACH;AAH4F,GAAtE;AAAA,CAA3B;;AAMA,eAAeC,OAAO,CAAC,IAAD,EAAOK,kBAAP,CAAP,CAAkCJ,cAAlC,CAAf","sourcesContent":["import { useEffect } from 'react';\nimport { Action } from 'redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AppState } from '../redux';\nimport subscribeForAuthenticatedUserThunk from '../redux/thunks/subscribeForAuthenticatedUserThunk';\nimport { connect } from 'react-redux';\n\ninterface ReduxFunctions {\n    subscribeForAuthenticatedUser: () => void;\n}\n\ninterface Props extends ReduxFunctions {\n    children: JSX.Element;\n}\n\nfunction Authentication(props: Props): JSX.Element {\n    const { subscribeForAuthenticatedUser } = props;\n\n    useEffect(() => {\n        subscribeForAuthenticatedUser();\n    }, [subscribeForAuthenticatedUser]);\n\n    return props.children;\n}\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<void, AppState, Action>): ReduxFunctions => ({\n    subscribeForAuthenticatedUser(): void {\n        dispatch(subscribeForAuthenticatedUserThunk());\n    }\n});\n\nexport default connect(null, mapDispatchToProps)(Authentication);\n"]},"metadata":{},"sourceType":"module"}