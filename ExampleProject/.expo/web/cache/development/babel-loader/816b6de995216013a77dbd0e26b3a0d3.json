{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { authenticationSlice } from '..';\n\nvar subscribeForAuthenticatedUserThunk = function subscribeForAuthenticatedUserThunk() {\n  return function (dispatch) {\n    firebase.auth().onAuthStateChanged(function (user) {\n      dispatch(authenticationSlice.actions.setFirebaseUser(user));\n      dispatch(authenticationSlice.actions.setLoadingFirebaseData(false));\n    }, function (error) {\n      alert(error.message);\n    });\n  };\n};\n\nexport default subscribeForAuthenticatedUserThunk;","map":{"version":3,"sources":["/Users/brandonmaldonadoalonso/GitHub/react-firebase-auth/ExampleProject/redux/thunks/subscribeForAuthenticatedUserThunk.ts"],"names":["firebase","authenticationSlice","subscribeForAuthenticatedUserThunk","dispatch","auth","onAuthStateChanged","user","actions","setFirebaseUser","setLoadingFirebaseData","error","alert","message"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AAIA,SAASC,mBAAT,QAAoC,IAApC;;AAEA,IAAMC,kCAAkC,GAAG,SAArCA,kCAAqC;AAAA,SAAM,UAC7CC,QAD6C,EAEtC;AACPH,IAAAA,QAAQ,CAACI,IAAT,GAAgBC,kBAAhB,CACI,UAACC,IAAD,EAAU;AACNH,MAAAA,QAAQ,CAACF,mBAAmB,CAACM,OAApB,CAA4BC,eAA5B,CAA4CF,IAA5C,CAAD,CAAR;AACAH,MAAAA,QAAQ,CAACF,mBAAmB,CAACM,OAApB,CAA4BE,sBAA5B,CAAmD,KAAnD,CAAD,CAAR;AACH,KAJL,EAKI,UAACC,KAAD,EAAW;AACPC,MAAAA,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;AACH,KAPL;AASH,GAZ0C;AAAA,CAA3C;;AAcA,eAAeV,kCAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { MinimalExpectedReduxState } from '../../../src/redux/types';\nimport { Action } from 'redux';\nimport { authenticationSlice } from '..';\n\nconst subscribeForAuthenticatedUserThunk = () => (\n    dispatch: ThunkDispatch<firebase.Unsubscribe, MinimalExpectedReduxState, Action>\n): void => {\n    firebase.auth().onAuthStateChanged(\n        (user) => {\n            dispatch(authenticationSlice.actions.setFirebaseUser(user));\n            dispatch(authenticationSlice.actions.setLoadingFirebaseData(false));\n        },\n        (error) => {\n            alert(error.message);\n        }\n    );\n};\n\nexport default subscribeForAuthenticatedUserThunk;\n"]},"metadata":{},"sourceType":"module"}